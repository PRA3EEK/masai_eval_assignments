Question 4: Explain Generics in Java and Its Importance with example
Answer: In java, Generics is specifying the type of the parameter of a class or a method it can be primitive 
        data type wrapper classes, user defined data types or user defined classes.
        Generics in java provides various benefits like:
        1. type safety: We can hold only a single type of objects in generics. It doesnâ€™t allow. 
           to store other objects.
        
        2. Type casting is not required: There is no need to downcast the object.
        
        3. Compile-Time Checking: It is checked at compile time so problem will not occur at
           runtime. The good programming strategy says it is far better to handle the problem
           at compile time than runtime
           
           Example of generic class:
           
           //MyGen.java
               class MyGen<T>{
                  T obj;
               void add(T obj){
                  this.obj=obj;
                     }
                 T get(){
                   return obj;
                 }
                }
           //Main.java
           public class Main {
           public static void main(String[] args) {
           MyGen<String> gen1 = new MyGen();
           gen1.add("Hello");
           System.out.println(gen1.get());
           MyGen<Integer> gen2 = new MyGen();
           gen2.add(20);
           System.out.println(gen2.get());
           MyGen<Student> gen3 = new MyGen();
           gen3.add(new Student(10,"Amit",780));
           System.out.println(gen3.get().getName());
        }
     }
           
           example of generic method:
           
           public class Main{
          public static <E> void printArray(E[] elements) {
           for ( E element : elements){
           System.out.println(element );
        }
        System.out.println();
        }
      public static void main( String args[] ) {
        Integer[] intArray = { 10, 20, 30, 40, 50 };
   Character[] charArray = { 'M', 'A', 'S', 'A', 'I'};
     System.out.println( "Printing Integer Array" );
     printArray( intArray );
      System.out.println( "Printing Character Array" );
    printArray( charArray );
    }
  }